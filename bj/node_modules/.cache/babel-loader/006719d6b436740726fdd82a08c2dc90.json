{"ast":null,"code":"var _s = $RefreshSig$();\nimport Web3 from 'web3/dist/web3.min.js';\nimport useWeb3 from './useWeb3';\nimport { useEffect, useState } from 'react';\nconst Token = () => {\n  _s();\n  const [account, web3] = useWeb3();\n  const [isLogin, setIsLogin] = useState(false);\n  const [balance, setBalance] = useState(0);\n  let tokenAddress = \"REPLACE_WITH_ERC20_TOKEN_ADDRESS\";\n  let walletAddress = \"REPLACE_WITH_WALLET_ADDRESS\";\n\n  // ERC20 トークンの残高を取得するための最小限のABI\n  let minABI = [\n  // balanceOf\n  {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n      \"name\": \"balance\",\n      \"type\": \"uint256\"\n    }],\n    \"type\": \"function\"\n  },\n  // decimals\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"type\": \"function\"\n  }];\n\n  //  ABI とコントラクト（ERC20トークン）のアドレスから、コントラクトのインスタンスを取得\n  let contract = web3.eth.contract(minABI).at(tokenAddress);\n\n  // 引数にウォレットのアドレスを渡して、balanceOf 関数を呼ぶ\n  contract.balanceOf(walletAddress, (error, balance) => {\n    // ERC20トークンの decimals を取得\n    contract.decimals((error, decimals) => {\n      // 残高を計算\n      balance = balance.div(10 ** decimals);\n      console.log(balance.toString());\n    });\n  });\n};\n_s(Token, \"8jFeAWumFda5Pu2Hd+1IM8eLdaE=\", false, function () {\n  return [useWeb3];\n});\n_c = Token;\nexport default Token;\nvar _c;\n$RefreshReg$(_c, \"Token\");","map":{"version":3,"names":["Web3","useWeb3","useEffect","useState","Token","account","web3","isLogin","setIsLogin","balance","setBalance","tokenAddress","walletAddress","minABI","contract","eth","at","balanceOf","error","decimals","div","console","log","toString"],"sources":["/Users/itta/Desktop/week3/myToken/bj/src/component/Token.js"],"sourcesContent":["import Web3 from 'web3/dist/web3.min.js'\nimport useWeb3 from './useWeb3';\nimport { useEffect, useState } from 'react';\n\nconst Token = () =>{\n\nconst [account, web3] = useWeb3();\nconst [isLogin, setIsLogin] = useState(false);\nconst [balance, setBalance] = useState(0);\nlet tokenAddress = \"REPLACE_WITH_ERC20_TOKEN_ADDRESS\";\nlet walletAddress = \"REPLACE_WITH_WALLET_ADDRESS\";\n\n// ERC20 トークンの残高を取得するための最小限のABI\nlet minABI = [\n  // balanceOf\n  {\n    \"constant\":true,\n    \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n    \"name\":\"balanceOf\",\n    \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n    \"type\":\"function\"\n  },\n  // decimals\n  {\n    \"constant\":true,\n    \"inputs\":[],\n    \"name\":\"decimals\",\n    \"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\n    \"type\":\"function\"\n  }\n];\n\n//  ABI とコントラクト（ERC20トークン）のアドレスから、コントラクトのインスタンスを取得\nlet contract = web3.eth.contract(minABI).at(tokenAddress);\n\n// 引数にウォレットのアドレスを渡して、balanceOf 関数を呼ぶ\ncontract.balanceOf(walletAddress, (error, balance) => {\n  // ERC20トークンの decimals を取得\n  contract.decimals((error, decimals) => {\n    // 残高を計算\n    balance = balance.div(10**decimals);\n    console.log(balance.toString());\n  });\n});\n}\nexport default Token;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,uBAAuB;AACxC,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,KAAK,GAAG,MAAK;EAAA;EAEnB,MAAM,CAACC,OAAO,EAAEC,IAAI,CAAC,GAAGL,OAAO,EAAE;EACjC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACzC,IAAIQ,YAAY,GAAG,kCAAkC;EACrD,IAAIC,aAAa,GAAG,6BAA6B;;EAEjD;EACA,IAAIC,MAAM,GAAG;EACX;EACA;IACE,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,CAAC;MAAC,MAAM,EAAC,QAAQ;MAAC,MAAM,EAAC;IAAS,CAAC,CAAC;IAC7C,MAAM,EAAC,WAAW;IAClB,SAAS,EAAC,CAAC;MAAC,MAAM,EAAC,SAAS;MAAC,MAAM,EAAC;IAAS,CAAC,CAAC;IAC/C,MAAM,EAAC;EACT,CAAC;EACD;EACA;IACE,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,EAAE;IACX,MAAM,EAAC,UAAU;IACjB,SAAS,EAAC,CAAC;MAAC,MAAM,EAAC,EAAE;MAAC,MAAM,EAAC;IAAO,CAAC,CAAC;IACtC,MAAM,EAAC;EACT,CAAC,CACF;;EAED;EACA,IAAIC,QAAQ,GAAGR,IAAI,CAACS,GAAG,CAACD,QAAQ,CAACD,MAAM,CAAC,CAACG,EAAE,CAACL,YAAY,CAAC;;EAEzD;EACAG,QAAQ,CAACG,SAAS,CAACL,aAAa,EAAE,CAACM,KAAK,EAAET,OAAO,KAAK;IACpD;IACAK,QAAQ,CAACK,QAAQ,CAAC,CAACD,KAAK,EAAEC,QAAQ,KAAK;MACrC;MACAV,OAAO,GAAGA,OAAO,CAACW,GAAG,CAAC,EAAE,IAAED,QAAQ,CAAC;MACnCE,OAAO,CAACC,GAAG,CAACb,OAAO,CAACc,QAAQ,EAAE,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,CAAC;AACF,CAAC;AAAA,GAxCKnB,KAAK;EAAA,QAEaH,OAAO;AAAA;AAAA,KAFzBG,KAAK;AAyCX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}