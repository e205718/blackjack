{"ast":null,"code":"var _jsxFileName = \"/Users/itta/Desktop/week3/myToken/bj/src/component/Token.js\";\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function pog() {\n  const Web3 = require('web3');\n  var currentProvider = new Web3.providers.HttpProvider('http://localhost:7545');\n  const web3 = new Web3(currentProvider);\n  let tokenAddress = \"0xE387cC87AC9ec21A223420A535a6Db30b9989E19\";\n  let walletAddress = \"0x1E07f4b714733fC8a8F4D64CBDfE35aE0C9F5978\";\n\n  // ERC20 トークンの残高を取得するための最小限のABI\n  let minABI = [\n  // balanceOf\n  {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n      \"name\": \"balance\",\n      \"type\": \"uint256\"\n    }],\n    \"type\": \"function\"\n  },\n  // decimals\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"type\": \"function\"\n  }];\n\n  //  ABI とコントラクト（ERC20トークン）のアドレスから、コントラクトのインスタンスを取得\n  const contract = new web3.eth.Contract(minABI, tokenAddress);\n\n  // 引数にウォレットのアドレスを渡して、balanceOf 関数を呼ぶ\n  const result = contract.methods.balanceOf(walletAddress).call();\n  console.log(result);\n  const mes = \"あなたの残高は\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" $\", pog.mes]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\nexport default pog;","map":{"version":3,"names":["Web3","pog","require","currentProvider","providers","HttpProvider","web3","tokenAddress","walletAddress","minABI","contract","eth","Contract","result","methods","balanceOf","call","console","log","mes"],"sources":["/Users/itta/Desktop/week3/myToken/bj/src/component/Token.js"],"sourcesContent":["import Web3 from 'web3'\n\nasync function pog(){\n\nconst Web3 = require('web3');\nvar currentProvider = new Web3.providers.HttpProvider('http://localhost:7545');\nconst web3 = new Web3(currentProvider);\nlet tokenAddress = \"0xE387cC87AC9ec21A223420A535a6Db30b9989E19\";\nlet walletAddress = \"0x1E07f4b714733fC8a8F4D64CBDfE35aE0C9F5978\";\n\n// ERC20 トークンの残高を取得するための最小限のABI\nlet minABI = [\n  // balanceOf\n  {\n    \"constant\":true,\n    \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n    \"name\":\"balanceOf\",\n    \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n    \"type\":\"function\"\n  },\n  // decimals\n  {\n    \"constant\":true,\n    \"inputs\":[],\n    \"name\":\"decimals\",\n    \"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\n    \"type\":\"function\"\n  }\n];\n\n//  ABI とコントラクト（ERC20トークン）のアドレスから、コントラクトのインスタンスを取得\nconst contract = new web3.eth.Contract(minABI,tokenAddress);\n\n// 引数にウォレットのアドレスを渡して、balanceOf 関数を呼ぶ\n const result =  contract.methods.balanceOf(walletAddress).call();\n console.log(result)\n const mes = \"あなたの残高は\"\n\nreturn(\n\n  <div> ${pog.mes}</div>\n\n);\n}\nexport default pog;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AAAA;AAEvB,eAAeC,GAAG,GAAE;EAEpB,MAAMD,IAAI,GAAGE,OAAO,CAAC,MAAM,CAAC;EAC5B,IAAIC,eAAe,GAAG,IAAIH,IAAI,CAACI,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC;EAC9E,MAAMC,IAAI,GAAG,IAAIN,IAAI,CAACG,eAAe,CAAC;EACtC,IAAII,YAAY,GAAG,4CAA4C;EAC/D,IAAIC,aAAa,GAAG,4CAA4C;;EAEhE;EACA,IAAIC,MAAM,GAAG;EACX;EACA;IACE,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,CAAC;MAAC,MAAM,EAAC,QAAQ;MAAC,MAAM,EAAC;IAAS,CAAC,CAAC;IAC7C,MAAM,EAAC,WAAW;IAClB,SAAS,EAAC,CAAC;MAAC,MAAM,EAAC,SAAS;MAAC,MAAM,EAAC;IAAS,CAAC,CAAC;IAC/C,MAAM,EAAC;EACT,CAAC;EACD;EACA;IACE,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,EAAE;IACX,MAAM,EAAC,UAAU;IACjB,SAAS,EAAC,CAAC;MAAC,MAAM,EAAC,EAAE;MAAC,MAAM,EAAC;IAAO,CAAC,CAAC;IACtC,MAAM,EAAC;EACT,CAAC,CACF;;EAED;EACA,MAAMC,QAAQ,GAAG,IAAIJ,IAAI,CAACK,GAAG,CAACC,QAAQ,CAACH,MAAM,EAACF,YAAY,CAAC;;EAE3D;EACC,MAAMM,MAAM,GAAIH,QAAQ,CAACI,OAAO,CAACC,SAAS,CAACP,aAAa,CAAC,CAACQ,IAAI,EAAE;EAChEC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;EACnB,MAAMM,GAAG,GAAG,SAAS;EAEtB,oBAEE;IAAA,iBAAQlB,GAAG,CAACkB,GAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAO;AAGxB;AACA,eAAelB,GAAG"},"metadata":{},"sourceType":"module"}