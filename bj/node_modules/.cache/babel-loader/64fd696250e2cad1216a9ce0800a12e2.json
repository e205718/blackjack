{"ast":null,"code":"var _s = $RefreshSig$();\nimport Web3 from 'web3';\nimport { useNavigate } from \"react-router-dom\";\nimport React, { useState } from 'react';\nfunction useBalance() {\n  _s();\n  const Web3 = require('web3');\n  var currentProvider = new Web3.providers.HttpProvider('http://localhost:7545');\n  const web3 = new Web3(currentProvider);\n  const navigate = useNavigate();\n  let minABI = [\n  // balanceOf\n  {\n    \"constant\": true,\n    \"inputs\": [{\n      \"name\": \"_owner\",\n      \"type\": \"address\"\n    }],\n    \"name\": \"balanceOf\",\n    \"outputs\": [{\n      \"name\": \"balance\",\n      \"type\": \"uint256\"\n    }],\n    \"type\": \"function\"\n  },\n  // decimals\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [{\n      \"name\": \"\",\n      \"type\": \"uint8\"\n    }],\n    \"type\": \"function\"\n  }];\n  var accounts = window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const [balance, setBalance] = useState(0);\n  const init = async () => {\n    const balance = await (web3 === null || web3 === void 0 ? void 0 : web3.eth.getBalance(accounts));\n    setBalance(balance / 10 ** 18);\n  };\n  init();\n}\n_s(useBalance, \"DMbr/WpBgbGbgT5nUrrGSZEVEJc=\", false, function () {\n  return [useNavigate];\n});\nexport default useBalance;","map":{"version":3,"names":["Web3","useNavigate","React","useState","useBalance","require","currentProvider","providers","HttpProvider","web3","navigate","minABI","accounts","window","ethereum","request","method","balance","setBalance","init","eth","getBalance"],"sources":["/Users/itta/Desktop/week3/myToken/bj/src/component/Balance.js"],"sourcesContent":["import Web3 from 'web3'\nimport { useNavigate } from \"react-router-dom\"\nimport React, { useState } from 'react';\n\nfunction useBalance(){\n\nconst Web3 = require('web3');\nvar currentProvider = new Web3.providers.HttpProvider('http://localhost:7545');\nconst web3 = new Web3(currentProvider);\n\nconst navigate = useNavigate()\n\nlet minABI = [\n  // balanceOf\n  {\n    \"constant\":true,\n    \"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\n    \"name\":\"balanceOf\",\n    \"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\n    \"type\":\"function\"\n  },\n  // decimals\n  {\n    \"constant\":true,\n    \"inputs\":[],\n    \"name\":\"decimals\",\n    \"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\n    \"type\":\"function\"\n  }\n];\nvar accounts = window.ethereum.request({ method: 'eth_requestAccounts' });\n    const [balance, setBalance] = useState(0);\n    const init = async () => {\n    const balance = await web3?.eth.getBalance(accounts);\n    setBalance(balance / 10 ** 18);\n};\ninit();\n}\nexport default useBalance;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,UAAU,GAAE;EAAA;EAErB,MAAMJ,IAAI,GAAGK,OAAO,CAAC,MAAM,CAAC;EAC5B,IAAIC,eAAe,GAAG,IAAIN,IAAI,CAACO,SAAS,CAACC,YAAY,CAAC,uBAAuB,CAAC;EAC9E,MAAMC,IAAI,GAAG,IAAIT,IAAI,CAACM,eAAe,CAAC;EAEtC,MAAMI,QAAQ,GAAGT,WAAW,EAAE;EAE9B,IAAIU,MAAM,GAAG;EACX;EACA;IACE,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,CAAC;MAAC,MAAM,EAAC,QAAQ;MAAC,MAAM,EAAC;IAAS,CAAC,CAAC;IAC7C,MAAM,EAAC,WAAW;IAClB,SAAS,EAAC,CAAC;MAAC,MAAM,EAAC,SAAS;MAAC,MAAM,EAAC;IAAS,CAAC,CAAC;IAC/C,MAAM,EAAC;EACT,CAAC;EACD;EACA;IACE,UAAU,EAAC,IAAI;IACf,QAAQ,EAAC,EAAE;IACX,MAAM,EAAC,UAAU;IACjB,SAAS,EAAC,CAAC;MAAC,MAAM,EAAC,EAAE;MAAC,MAAM,EAAC;IAAO,CAAC,CAAC;IACtC,MAAM,EAAC;EACT,CAAC,CACF;EACD,IAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAsB,CAAC,CAAC;EACrE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMgB,IAAI,GAAG,YAAY;IACzB,MAAMF,OAAO,GAAG,OAAMR,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEW,GAAG,CAACC,UAAU,CAACT,QAAQ,CAAC;IACpDM,UAAU,CAACD,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC;EAClC,CAAC;EACDE,IAAI,EAAE;AACN;AAAC,GAjCQf,UAAU;EAAA,QAMFH,WAAW;AAAA;AA4B5B,eAAeG,UAAU"},"metadata":{},"sourceType":"module"}